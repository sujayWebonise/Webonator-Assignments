#include <stdio.h>
#include <stdlib.h>
#include<string.h>
#include<conio.h>
#include<ctype.h>

char *language,variables[20][20],varCount=0;
char file_name[15];
int isvalidLine(char line[])
{
	int i;
//	printf("len : %d",line[0]);
	for(i=0;line[i]!='\0';i++)
	{
		while(isspace(line[i])&&line[i]!='\0'&&line[i]!='\n')
		{
			i++;
		}
		if('/'!=line[i]&&'\n'!=line[i]&&'\0'!=line[0])
		{
			return 1;
		}
	}
	return 0;
}


char* checkForPHP(char line[])
{
	int i,k=0;
	char word[100];

       for(i=0;line[i]!='\0';i++)
	{
		if(isspace(line[i]))
		{
			word[k]='\0';
			k=0;
		     //  printf("%s",word);
			if(!strcmp(word,"<?php"))
			{
			    return "PHP";
			}
			continue;
		}
		else
		{
			word[k++]=line[i];

		}
	}
	return " ";
}
char* checkFile(char line[])
{
	int i,k=0;
	char word[100];

       for(i=0;line[i]!='\0';i++)
	{
		if(isspace(line[i]))
		{
			word[k]='\0';
			k=0;
		       //	printf("%s",word);
			if(!strcmp(word,"class"))
			{

			      while(isspace(line[i++]));
			      while(!isspace(line[i++])&&line[i]!='{');
			      while(isspace(line[i++]));
			      i--;
			      if(line[i]=='{')
			      {
				 return "JAVA";
			      }
			      else
			      {
				return "RUBY";
			      }


			}
			continue;
		}
		else
		{

			word[k++]=line[i];

		}
	}
	return " ";

}

void findClasses(char line[])
{
	int i,k=0;
	char word[100];


       for(i=0;line[i]!='\0';i++)
	{
		if(isspace(line[i]))
		{
			word[k]='\0';
			k=0;

		       //	printf("%s",word);
			if(!strcmp(word,"class"))
			{

			      while(isspace(line[i++]));
			      i--;
			      do
			      {
				  printf("%c",line[i]);
			      }while(!isspace(line[i++]));
			      break;
			      printf(",");

			}
			continue;
		}
		else
		{

			word[k++]=line[i];

		}
	}


}


void findJAVAVariables(char line[])
{
	int i,k=0;
	char word[100];


       for(i=0;line[i]!='\0';i++)
	{
		if(isspace(line[i])||line[i]==';')
		{
			word[k]='\0';
			k=0;
			if(line[i]==';'||line[i+1]==';')
			{
			       strcpy(variables[varCount++],word);
			}
		       //	printf("%s",word);

			continue;
		}
		else
		{

			word[k++]=line[i];

		}
	}


}

void findPHPVariables(char line[])
{
	int i,k=0,j=0;
	char word[100];


       for(i=0;line[i]!='\0';i++)
	{
		if(isspace(line[i]))
		{
			word[k]='\0';
			k=0;

		       //	printf("%s",word);
		       if(word[0]=='$')
		       {
			   strcpy(variables[varCount++],word);
		       }
		       /*	if(!strcmp(word,"var"))
			{
			    printf("Var in");
			      while(isspace(line[i++]));
			      i--;
			      do
			      {
				  variables[varCount][j++]=line[i];
			      }while(!isspace(line[i++]));
			      variables[varCount++][j]='\0';

			      break;

			}*/
			continue;
		}
		else
		{

			word[k++]=line[i];

		}
	}



}

void findRUBYVariables(char line[])
{
	int i,k=0,j=0;
	char word[100];


       for(i=0;line[i]!='\0';i++)
	{
		if(isspace(line[i]))
		{
			word[k]='\0';
			k=0;

		       //	printf("%s",word);
		       if(word[0]=='@')
		       {
			   strcpy(variables[varCount++],word);
		       }
		       /*	if(!strcmp(word,"var"))
			{
			    printf("Var in");
			      while(isspace(line[i++]));
			      i--;
			      do
			      {
				  variables[varCount][j++]=line[i];
			      }while(!isspace(line[i++]));
			      variables[varCount++][j]='\0';

			      break;

			}*/
			continue;
		}
		else
		{

			word[k++]=line[i];

		}
	}



}



void parsePHP()
{
	char *str;
	//char *first_name[15];
	//char second_name[15];

	char ch,line[100],ln[200];
	//char temp="import;
	int i=0,k;
	FILE *fp;
	fp = fopen(file_name, "r");
	while(1)
	{
		str=fgets(ln,100,fp);
		if(!strcmp(str,NULL))
		{
			break;
		}

		if(isvalidLine(str))
		{
		   //	printf("%s",str  );

			findClasses(str);
			findPHPVariables(str);
		}

	    //	printf("lang : %s",language);


	}

}
void parseJAVA()
{
	char *str;
	//char *first_name[15];
	//char second_name[15];

	char ch,line[100],ln[200];
	//char temp="import;
	int i=0,k;
	FILE *fp;
	fp = fopen(file_name, "r");
	while(1)
	{
		str=fgets(ln,100,fp);
		if(!strcmp(str,NULL))
		{
			break;
		}

		if(isvalidLine(str))
		{
		   //	printf("%s",str  );

			findClasses(str);
			findJAVAVariables(str);
		}

	    //	printf("lang : %s",language);


	}

}


void parseRUBY()
{
	char *str;
	//char *first_name[15];
	//char second_name[15];

	char ch,line[100],ln[200];
	//char temp="import;
	int i=0,k;
	FILE *fp;
	fp = fopen(file_name, "r");
	while(1)
	{
		str=fgets(ln,100,fp);
		if(!strcmp(str,NULL))
		{
			break;
		}

		if(isvalidLine(str))
		{
		   //	printf("%s",str  );

			findClasses(str);
			findRUBYVariables(str);
		}

	    //	printf("lang : %s",language);


	}

}



int main()
{

	char *str;
	//char *first_name[15];
	//char second_name[15];

	char ch,line[100],ln[200];
	//char temp="import;
	int i=0,k,l=0;
	FILE *fp;
	printf("Enter the filename to be opened \n");
	scanf("%s", file_name);
	fp = fopen(file_name, "r");
	if (fp == NULL)
	{
		printf("file is not present \n");
		getch();
		exit(0);
	}
	while(1)
	{
		str=fgets(ln,100,fp);
		if(!strcmp(str,NULL))
		{
			break;
		}

		if(isvalidLine(str))
		{
		   //	printf("%s",str  );
			language=checkForPHP(str);

			if(!strcmp(language,"PHP"))
			{
				printf("\ language :  PHP");
				printf("\nClasses : ");
				parsePHP();
				printf("\nVariables %d: ",varCount);
					for(l=0;l<varCount;l++)
					{
						printf("%s, ",variables[l]);
					}
				getch();
				return 0;
			}
		}

	    //	printf("lang : %s",language);


		fclose(fp);


	}

	fp = fopen(file_name, "r");

	while(1)
	{
		str=fgets(ln,100,fp);
	       //	printf("line : %s",ln);
		if(!strcmp(str,NULL))
		{
			break;
		}
	      //n=strcmp(line,"<?php");

		     //	printf("line : %s",str  );
		if(isvalidLine(str))
		{

			getch();
			language=checkFile(str);
		     //	printf("line : %s",language  );
			if(strcmp(language," "))
			{
				printf("Language : %s",language);
				printf("\nClasses : ");
				if(!strcmp(language,"JAVA"))
				{
					parseJAVA();
					printf("\nVariables : ");
					for(l=0;l<varCount;l++)
					{
						printf("%s, ",variables[l]);
					}
				}
				else
				{
					parseRUBY();
					printf("\nVariables : ");
					for(l=0;l<varCount;l++)
					{
						printf("%s, ",variables[l]);
					}
				}
				break;
			}
		}

	    //	printf("lang : %s",language);
		getch();

	}


	fclose(fp);
	getch();
	return(0);
}


